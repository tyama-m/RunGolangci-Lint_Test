# MORISAWA Desktop Managerのリポジトリへのプッシュをトリガーとして
# Goファイルの静的解析をGithubActionで実行する。
# 対象ブランチは、先頭が[feature-FONTELIER_V2]で始まるブランチとする。
name: golangci-lint

on:
  push:
    branches:
      - feature-FONTELIER_V2**

jobs:
  lint-job:

    # 静的解析ではOSに依存することないので、ubuntu-latest のみとする。
    # 将来的にユニットテストなどを実施する場合には拡張が必要。
    strategy:
      matrix:
        #os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
       # リポジトリのチェックアウト
       - name: Repository checkout
         uses: actions/checkout@v2

       # gitで長いファイル名を許可する（Windows対応）
       - name: git sysytem setting
         if: ${{ runner.os }}=='windows-latest'
         run: git config --system core.longpaths true

       # キャッシュ処理
       #- name: Go Environment Cache
         #id: go-cache
         #uses: actions/cache@v2
         #with:
           #path: |
             #~/.cache/go-build
             #~/go/pkg/mod
           #key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
           #restore-keys: |
             #${{ runner.os }}-go-

       # Go言語のセットアップ (v1.17は2021/8/26現在最新）
       # https://github.com/marketplace/actions/setup-go
       # https://github.com/actions/go-versions
       - name: Setup Go
         #if: steps.go-cache.outputs.cache-hit != 'true'
         uses: actions/setup-go@v2
         with:
            go-version: 1.17

       # Goモジュールのダウンロード
       - name: Run go mod download
         #if: steps.go-cache.outputs.cache-hit != 'true'
         run: go mod download

       - name: dir
         run: dir $(go env GOPATH)

       # SQLite のインストール
       - name: Restore NuGets
         #run: nuget restore https://github.com/praeclarum/sqlite-net/blob/master/SQLite.sln
         #run: curl -sSfL https://github.com/praeclarum/sqlite-net/SQLite.sln
         run : DB.Browser.for.SQLite-3.12.2-win64.msi /quiet

       # golangci-lint をインストールする (v1.41.1は2021/8/17現在最新）
       - name: Install golangci-lint
         run: |
           #curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.0
           curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.42.0

       # 静的解析（golangci-lint）を実施する
       #- name: Run golangci-lint
       #  run: golangci-lint run --tests=False --timeout=30m --max-issues-per-linter 0 --max-same-issues 0 --out-format=colored-line-number ./...
