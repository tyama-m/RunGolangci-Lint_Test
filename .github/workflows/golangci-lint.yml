# MORISAWA Desktop Managerのリポジトリへのプッシュをトリガーとして
# Goファイルの静的解析をGithubActionで実行する。
# 対象ブランチは、先頭が[feature-FONTELIER_V2]で始まるブランチとする。
name: golangci-lint

on:
  push:
    branches:
      - feature-FONTELIER_V2**

jobs:
  lint-Job:
    runs-on: ubuntu-latest
    name: golangci-lint Job

    steps:
    # リポジトリのチェックアウト
    - name: Repository checkout
      uses: actions/checkout@v2

    # キャッシュ処理
    - name: Go Environment Cache
      id: go-cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    # Go言語のセットアップ (v1.16は2021/8/17現在最新）
    # https://github.com/marketplace/actions/setup-go
    - name: Setup Go
      if: steps.go-cache.outputs.cache-hit != 'true'
      uses: actions/setup-go@v1
      with:
        go-version: 1.16

    # Goモジュールをローカルキャッシュにダウンロードする
    - name: Run go mod download
      #if: steps.go-cache.outputs.cache-hit != 'true'
      run: go mod download

    # golangci-lint をインストールする (v1.41.1は2021/8/17現在最新）
    - name: Install golangci-lint
      run: |
        curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.41.1
        sudo mv ./bin/golangci-lint $GOPATH/bin/

    # golangci-lint を実施する
    - name: Run golangci-lint
      run: golangci-lint run --tests=False --timeout=30m --max-issues-per-linter 0 --max-same-issues 0 --out-format=colored-line-number ./...
